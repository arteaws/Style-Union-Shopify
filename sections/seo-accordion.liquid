{%- style -%}
.csFaq.container {
    margin-bottom: 4rem;
}

  .csFaq-heading {
    text-align: {{ section.settings.heading_alignment }};
    color: {{ section.settings.heading_color }};
    margin-bottom: 30px;
    font-size:{{section.settings.csheadinfaqDesk}}px;
  }

  .csFaq-accordion {
    overflow: hidden;
  }

.csFaq-accordion-item {
    border-bottom: 1px solid #000;
}

  .csFaq-accordion-item:last-child {
    border-bottom: none;
  }

  .csFaq-accordion-trigger {
    width: 100%;
    font-size:{{section.settings.csQueinfaqDesk}}px;
    font-weight: 500 !important;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px;
    background: none;
    border: none;
    cursor: pointer;
    text-align: left;
    color: {{ section.settings.question_color }};
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .csFaq-accordion-trigger:hover {
    background-color: rgba(0,0,0,0.03);
  }

  .csFaq-accordion-trigger .icon {
    transition: transform 0.3s ease;
  }

  .csFaq-accordion-trigger[aria-expanded="true"] .icon {
    transform: rotate(180deg);
  }

  .csFaq-accordion-content {
    padding: 0 20px;
    font-size:{{section.settings.csAnsinfaqDesk}}px;
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    color: {{ section.settings.answer_color }};
  }

  .csFaq-accordion-content[aria-hidden="false"] {
    padding: 0 20px 20px;
    max-height: 1000px;
  }

  .csFaq-accordion-trigger .icon  > svg{
color:#000;
  }

   

@media (max-width: 768px) {
 .csFaq-heading {
font-size:{{section.settings.csHeadinfaqMobile}}px;
 }
.csFaq-accordion-trigger {
  font-size:{{section.settings.csQueinfaqMobile}}px;
}
.csFaq-accordion-content {
    font-size:{{section.settings.csAnsinfaqMobile}}px;
}
.csFaq-accordion-trigger {
    align-items: self-start;
}

}
{%- endstyle -%}
  {%- assign questions = collection.metafields.custom.collection_faq_questions.value -%}
  {%- assign answers = collection.metafields.custom.collection_faq_answers.value -%}

  
{%- if questions != blank and answers != blank and questions.size > 0 and answers.size > 0 -%}
<div class="csFaq container gridlock row">
  {%- if section.settings.heading != blank -%}
    <h2 class="csFaq-heading">{{ section.settings.heading }}</h2>
  {%- endif -%}

  <div class="csFaq-accordion">
    {%- for question in questions -%}
      {%- assign index = forloop.index0 -%}
      <div class="csFaq-accordion-item">
          <h3 class="csFaq-accordion-trigger" 
                  aria-expanded="false" 
                  aria-controls="csFaq-accordion-content-{{ forloop.index }}">
            <span>{{ question }}</span>
            <span class="icon">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="6 9 12 15 18 9"></polyline>
              </svg>
            </span>
          </h3>
        <div id="csFaq-accordion-content-{{ forloop.index }}" 
             class="csFaq-accordion-content" 
             aria-hidden="true">
          {{ answers[index] }}
        </div>
      </div>
    {%- endfor -%}
  </div>
</div>
{% endif %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const triggers = document.querySelectorAll('.csFaq-accordion-trigger');
    
    triggers.forEach(trigger => {
      trigger.addEventListener('click', function() {
        const isExpanded = this.getAttribute('aria-expanded') === 'true';
        
        // Close all other accordion items
        if (!isExpanded) {
          triggers.forEach(t => {
            if (t !== trigger) {
              t.setAttribute('aria-expanded', 'false');
              const contentId = t.getAttribute('aria-controls');
              document.getElementById(contentId).setAttribute('aria-hidden', 'true');
            }
          });
        }
        
        // Toggle current item
        this.setAttribute('aria-expanded', !isExpanded);
        const contentId = this.getAttribute('aria-controls');
        document.getElementById(contentId).setAttribute('aria-hidden', isExpanded);
      });
    });
  });
</script>

{% schema %}
{
  "name": "FAQ Accordion",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Frequently Asked Questions"
    },
    {
      "type": "range",
      "id": "csheadinfaqDesk",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Heading Font Size (Desktop)",
      "default": 20
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#000000"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "color",
      "id": "question_color",
      "label": "Question Color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "csQueinfaqDesk",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Question Font Size (Desktop)",
      "default": 17
    },
    {
      "type": "color",
      "id": "answer_color",
      "label": "Answer Color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "csAnsinfaqDesk",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Answer Font Size (Desktop)",
      "default": 16
    },
    {
      "type": "range",
      "id": "csHeadinfaqMobile",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Heading Font Size (Mobile)",
      "default": 16
    },
    {
      "type": "range",
      "id": "csQueinfaqMobile",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Question Font Size (Mobile)",
      "default": 15
    },
    {
      "type": "range",
      "id": "csAnsinfaqMobile",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Answer Font Size (Mobile)",
      "default": 14
    }
  ],
  "presets": [
    {
      "name": "FAQ Accordion",
      "category": "Custom"
    }
  ]
}
{% endschema %}