{%- liquid
  assign desktop_slides = section.settings.desktop_slides
  assign mobile_slides = section.settings.mobile_slides
  assign heading = section.settings.heading
  assign bg_color = section.settings.bg_color
  assign text_color = section.settings.text_color
  assign heading_size = section.settings.heading_size
  assign max_products = section.settings.max_products
  assign show_product_name = section.settings.show_product_name
-%}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>

<style>
  .custom-recent-products {
    background-color: {{ bg_color }};
    color: {{ text_color }};
    padding: 40px 0;
    position: relative;
  }
  
  .custom-recent-products__heading {
    font-size: {{ heading_size }}px;
    text-align: center;
    margin-bottom: 30px;
  }
  
  .custom-recent-products__slider {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    overflow: hidden;
  }
  
  .custom-recent-products__slide {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: auto;
  }
  
  .custom-recent-products__image-container {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
    overflow: hidden;
    border-radius: 8px;
    margin-bottom: 10px;
  }
  
  .custom-recent-products__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .custom-recent-products__title {
    font-size: 16px;
    text-align: center;
    color: {{ text_color }};
    text-decoration: none;
    padding: 0 10px;
    word-break: break-word;
  }
  
  .swiper-button-next,
  .swiper-button-prev {
    color: {{ text_color }};
    background: rgba(255,255,255,0.5);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }
  
  .swiper-button-next:hover,
  .swiper-button-prev:hover {
    background: rgba(255,255,255,0.8);
  }
  
  .swiper-button-next::after,
  .swiper-button-prev::after {
    font-size: 20px;
  }
  
  @media (max-width: 749px) {
    .custom-recent-products__slider {
      padding: 0 15px;
    }
    
    .custom-recent-products__heading {
      font-size: calc({{ heading_size }}px * 0.8);
    }
    
    .swiper-button-next,
    .swiper-button-prev {
      display: none;
    }
  }
</style>

<div class="custom-recent-products" data-section-id="{{ section.id }}">
  {% if heading != blank %}
    <h2 class="custom-recent-products__heading">{{ heading }}</h2>
  {% endif %}
  
  <div class="custom-recent-products__slider-container">
    <div class="swiper custom-recent-products__slider">
      <div class="swiper-wrapper" id="recent-products-container-{{ section.id }}">
        <!-- Products will be loaded via JavaScript -->
      </div>
      
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Function to get recently viewed products from localStorage
    function getRecentProducts() {
      const recentProductsJSON = localStorage.getItem('recentlyViewedProducts');
      try {
        return recentProductsJSON ? JSON.parse(recentProductsJSON) : [];
      } catch (e) {
        console.error('Error parsing recent products:', e);
        return [];
      }
    }
    
    // Function to validate product data
    function isValidProduct(product) {
      return product && 
             product.id && 
             product.url && 
             product.image && 
             product.image !== 'undefined' && 
             product.image !== 'null';
    }
    
    // Function to update the slider with recent products
    function updateRecentProductsSlider(sectionId, maxProducts, showName) {
      const recentProducts = getRecentProducts();
      const container = document.getElementById(`recent-products-container-${sectionId}`);
      const sectionElement = container ? container.closest('.custom-recent-products') : null;
      
      if (!container || !sectionElement) return;
      
      // Filter out invalid products
      const validProducts = recentProducts.filter(isValidProduct).slice(0, maxProducts);
      
      if (validProducts.length === 0) {
        sectionElement.style.display = 'none';
        return;
      }
      
      sectionElement.style.display = '';
      
      // Clear existing slides
      container.innerHTML = '';
      
      // Create slides for each valid product
      validProducts.forEach(product => {
        const slide = document.createElement('div');
        slide.className = 'swiper-slide custom-recent-products__slide';
        
        const link = document.createElement('a');
        link.href = product.url;
        link.style.display = 'block';
        link.style.width = '100%';
        
        const imageContainer = document.createElement('div');
        imageContainer.className = 'custom-recent-products__image-container';
        
        const image = document.createElement('img');
        image.className = 'custom-recent-products__image';
        image.src = product.image;
        image.alt = product.title || 'Product image';
        image.loading = 'lazy';
        
        imageContainer.appendChild(image);
        link.appendChild(imageContainer);
        
        if (showName && product.title) {
          const title = document.createElement('div');
          title.className = 'custom-recent-products__title';
          title.textContent = product.title;
          link.appendChild(title);
        }
        
        slide.appendChild(link);
        container.appendChild(slide);
      });
      
      // Initialize or update Swiper
      const sliderEl = container.closest('.swiper');
      if (window.recentProductsSwiper) {
        window.recentProductsSwiper.destroy(true, true);
      }
      
      window.recentProductsSwiper = new Swiper(sliderEl, {
        slidesPerView: 'auto',
        centeredSlides: false,
        spaceBetween: 20,
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        breakpoints: {
          320: {
            slidesPerView: {{ mobile_slides }},
            spaceBetween: 15
          },
          750: {
            slidesPerView: {{ desktop_slides }},
            spaceBetween: 30
          }
        }
      });
    }
    
    // Initialize the slider
    updateRecentProductsSlider('{{ section.id }}', {{ max_products }}, {{ show_product_name }});
    
    // Update slider when localStorage changes
    window.addEventListener('storage', function() {
      updateRecentProductsSlider('{{ section.id }}', {{ max_products }}, {{ show_product_name }});
    });
  });
</script>