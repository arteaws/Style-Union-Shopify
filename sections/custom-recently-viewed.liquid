<script>
  // Enhanced product tracker that works with all product templates
  document.addEventListener('DOMContentLoaded', function() {
    // Check if this is a product page
    if (window.location.pathname.match(/\/products\/[^\/]+/)) {
      // Get product data from Shopify object or meta tags
      const productData = {
        id: {{ product.id | default: 'null' | json }},
        title: {{ product.title | default: 'Untitled Product' | json }},
        url: window.location.pathname,
        image: {{ product.featured_image | img_url: '400x' | default: '' | json }},
        handle: {{ product.handle | default: 'null' | json }}
      };

      // Only proceed if we have valid product data
      if (!productData.id || productData.id === 'null') {
        console.warn('Product ID not found - tracking skipped');
        return;
      }

      // Get existing recent products
      let recentProducts = [];
      try {
        const storedData = localStorage.getItem('recentlyViewedProducts');
        recentProducts = storedData ? JSON.parse(storedData) : [];
        
        // Validate stored data structure
        recentProducts = recentProducts.filter(item => 
          item && item.id && item.url && item.handle
        );
      } catch (e) {
        console.error('Error parsing recent products:', e);
        recentProducts = [];
      }

      // Remove if this product already exists (using both ID and handle for reliability)
      recentProducts = recentProducts.filter(p => 
        p.id !== productData.id && p.handle !== productData.handle
      );

      // Add new product to beginning of array
      recentProducts.unshift(productData);

      // Enforce maximum limit (16 products)
      const MAX_PRODUCTS = 16;
      if (recentProducts.length > MAX_PRODUCTS) {
        recentProducts = recentProducts.slice(0, MAX_PRODUCTS);
      }

      // Save back to localStorage
      try {
        localStorage.setItem('recentlyViewedProducts', JSON.stringify(recentProducts));
      } catch (e) {
        console.error('Error saving recent products:', e);
        // Fallback: Try removing older items if storage is full
        if (e.name === 'QuotaExceededError') {
          localStorage.setItem('recentlyViewedProducts', 
            JSON.stringify(recentProducts.slice(0, MAX_PRODUCTS - 2)));
        }
      }
    }
  });
</script>


{% schema %}
{
  "name": "Custom Recent Products",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Recently Viewed Products"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 12,
      "max": 36,
      "step": 1,
      "unit": "px",
      "label": "Heading size",
      "default": 24
    },
    {
      "type": "range",
      "id": "desktop_slides",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Number of slides on desktop",
      "default": 4
    },
    {
      "type": "range",
      "id": "mobile_slides",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Number of slides on mobile",
      "default": 2
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 3,
      "max": 20,
      "step": 1,
      "label": "Maximum products to show",
      "default": 10
    },
    {
      "type": "checkbox",
      "id": "show_product_name",
      "label": "Show product name",
      "default": true
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background color",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    }
  ],
  "presets": [
    {
      "name": "Custom Recent Products",
      "category": "Products"
    }
  ]
}
{% endschema %}