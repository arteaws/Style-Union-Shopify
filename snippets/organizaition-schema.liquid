{%- if template == 'index' -%}
<!-- Website Schema: -->
<script type="application/ld+json">
{
  "@context": "https://schema.org/",
  "@type": "WebSite",
  "name": "Style Union",
  "url": "https://styleunion.in/",
  "potentialAction": {
    "@type": "SearchAction",
    "target": "https://styleunion.in/search?q={search_term_string}",
    "query-input": "required name=search_term_string"
  }
}
</script>

<!-- Organization Schema (already available, but need to be optimized): -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": "Style Union",
  "url": "https://styleunion.in/",
  "logo": "https://styleunion.in/cdn/shop/files/category_app_assets__1000___1000px___7_5a225ef2-7ced-45ea-861a-bdf34cdd0616.png?v=1721725988&width=1200",
  "contactPoint": {
    "@type": "ContactPoint",
    "telephone": "+91 9429692121",
    "contactType": "customer service",
    "areaServed": "IN",
    "availableLanguage": ["Hindi","en"]
  },
  "sameAs": [
    "https://www.facebook.com/Styleunion.in",
    "https://x.com/styleunion_in",
    "https://www.youtube.com/@styleunion_in",
    "https://www.instagram.com/styleunion.in/",
    "https://styleunion.in/"
  ]
}
</script>

{%- endif -%}




{% if template contains 'collection' %}
<script type="application/ld+json" id="CollectionStructuredData">
{
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": "{{ collection.title | strip_html | escape }}",
  "url": "{{ shop.url }}{{ collection.url }}",
  "description": "{{ collection.description | strip_html | escape }}",
  "mainEntity": {
    "@type": "ItemList",
    "itemListElement": []
  }{% if collection.image %},
  "image": "{{ collection.image | image_url: width: 1024 }}"{% endif %},
  "publisher": {
    "@type": "Organization",
    "name": "{{ shop.name | escape }}"{% if settings.logo %},
    "logo": {
      "@type": "ImageObject",
      "url": "{{ settings.logo | image_url: width: 300 }}"
    }{% endif %}
  }
}
</script>

<script>
// Function to update structured data when new products load
function updateCollectionStructuredData(products) {
  const scriptTag = document.getElementById('CollectionStructuredData');
  if (!scriptTag) return;
  
  try {
    const structuredData = JSON.parse(scriptTag.textContent);
    
    products.forEach((product, index) => {
      const position = structuredData.mainEntity.itemListElement.length + 1;
      structuredData.mainEntity.itemListElement.push({
        "@type": "ListItem",
        "position": position,
        "item": {
          "@type": "Product",
          "name": product.title,
          "url": `${window.location.origin}${product.url}`,
          "image": product.featured_image?.src || '',
          "brand": {
            "@type": "Brand",
            "name": product.vendor
          },
          "offers": {
            "@type": "Offer",
            "price": product.price.toString(),
            "priceCurrency": "{{ cart.currency.iso_code }}",
            "availability": `http://schema.org/${product.available ? 'InStock' : 'OutOfStock'}`,
            "priceValidUntil": "2030-01-01"
          }
        }
      });
    });
    
    scriptTag.textContent = JSON.stringify(structuredData);
  } catch (e) {
    console.error('Error updating structured data:', e);
  }
}

// Call this function whenever new products are loaded via infinite scroll
// You'll need to hook this into your infinite scroll implementation
// Example:
// document.addEventListener('infiniteScrollLoaded', (event) => {
//   updateCollectionStructuredData(event.detail.products);
// });
</script>
{% endif %}