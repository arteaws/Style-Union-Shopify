{% capture thumbnails %}
  {% if product.media.size > 1 %}
    {%- liquid
      if thumbnail_position == 'bottom'
        assign style = 'horizontal-carousel'
        assign width = 'span-12'
        assign js_class = 'js-thumb-horizontal-wrapper'
      else
        assign style = 'vertical-carousel'
        assign width = ''
        assign js_class = 'js-thumb-vertical-wrapper'
      endif
    -%}

    <div id="thumbnails" class="thumb-slider thumbnail-slider custom {{ style }} {{ width }} auto" data-thumbnail-position="{{ thumbnail_position }}">
      <div class="thumb-slider-wrapper {{ js_class }} js-thumb-wrapper" id="thumb-slider-wrapper">
        <div class="carousel-nav thumb-slider-slides slides product-single__thumbnails-{{ section.id }} js-thumb-carousel-nav{% if product.media.size <4 %} no_carousel{% endif %}" data-thumbnail-carousel>
          {% for media in product.media %}
            {%- liquid
              assign media_available_for_variant = false
              assign media_alt_downcase = media.alt | downcase
              assign current_variant_color = product.selected_or_first_available_variant.option1 | downcase
              
              if media_alt_downcase contains current_variant_color
                assign media_available_for_variant = true
              elsif media_alt_downcase == 'all'
                assign media_available_for_variant = true
              elsif media_alt_downcase == product.title | downcase
                assign media_available_for_variant = true
              elsif media.alt == blank
                assign media_available_for_variant = true
              endif
            -%}
            
            <div class="{{ media.media_type }}-thumbnail product-single__thumbnails-item carousel-cell {% if forloop.first %}is-nav-selected{% endif %} js-thumb-item thumb__{% if forloop.first %}first{% elsif forloop.last %}last{% endif %} {% unless media_available_for_variant %}hidden{% endunless %}" 
              data-slide-index="{{ forloop.index0 }}"
              data-image-id="{{ media.id }}" 
              data-media-alt="{{ media.alt | downcase | escape }}"
              data-media-color="{{ media.alt | split: ' ' | first | downcase }}"
              tabindex="0">
              <div class="product-single__thumbnail product-single__thumbnail--{{ section.id }} js-thumb-item-img-wrap" data-thumbnail-id="product-template-{{ media.id }}">
                {% liquid
                  assign loading = 'lazy'
                  assign fetch_priority = 'auto'

                  if template == 'product' and section.index < 3
                    if forloop.index < 10
                      assign loading = 'eager'
                      assign fetch_priority = 'high'
                    endif
                  elsif section.index == 1
                    if forloop.index < 10
                      assign loading = 'eager'
                      assign fetch_priority = 'high'
                    endif
                  endif
                %}
                {%
                  render 'basic-responsive-image',
                  type: media.preview_image,
                  width: 1200,
                  img_class: 'js-thumb-item-img',
                  loading: loading,
                  fetchpriority: fetch_priority
                %}
                {%- if media.media_type == 'video' or media.media_type =='external_video' -%}
                  <div class="thumbnail-icon">
                    {% render 'snip-icons',
                       wrapper: '.thumbnail-icon',
                       type: 'media-icons',
                       icon: 'play',
                       classes: 'thumbnail-icon-video--icon vib-center',
                       size: '25px',
                       fill: 'var(--text-color)',
                       hover: 'var(--text-color)' %}
                  </div>
                {%- endif -%}
                {%- if media.media_type == 'model' -%}
                  <div class="thumbnail-icon">
                    {% render 'snip-icons',
                       wrapper: '.thumbnail-icon',
                       type: 'media-icons',
                       icon: '3d-icon',
                       classes: 'thumbnail-icon-model--icon vib-center',
                       size: '25px',
                       fill: 'var(--text-color)',
                       hover: 'var(--text-color)' %}
                  </div>
                {%- endif -%}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  {% endif %}
{% endcapture %}

{% capture slider %}
  {%- liquid
    assign grid_width = ""

    if product.media.size > 1 and thumbnail_position != 'bottom'
      assign grid_width = "reduced-size"
    else
      assign grid_width = "span-12"
    endif

    if product.media.size <= 1
      assign no_slider = 'single-media'
    endif

    assign first_image = product.media | where: "media_type", "image" | first
  -%}
  
  <div id="slider" class="{{ grid_width }} thumbs_{{ thumbnail_position }} auto {{ no_slider }}">
    <div class="slides product-image-container carousel carousel-main js-carousel-main" data-product-id="{{ product.id }}" data-main-carousel>
      {% for media in product.media %}
        {%- liquid
          assign media_available_for_variant = false
          assign media_alt_downcase = media.alt | downcase
          assign current_variant_color = product.selected_or_first_available_variant.option1 | downcase
          
          if media_alt_downcase contains current_variant_color
            assign media_available_for_variant = true
          elsif media_alt_downcase == 'all'
            assign media_available_for_variant = true
          elsif media_alt_downcase == product.title | downcase
            assign media_available_for_variant = true
          elsif media.alt == blank
            assign media_available_for_variant = true
          endif
        -%}
        
        <div class="{{ media.media_type }}-slide carousel-cell js-main-carousel-cell {% unless media_available_for_variant %}hidden{% endunless %}" 
          data-image-id="{{ media.id }}" 
          data-slide-index="{{ forloop.index0 }}" 
          data-media-alt="{{ media.alt | downcase | escape }}"
          data-media-color="{{ media.alt | split: ' ' | first | downcase }}"
          tabindex="-1">
          <div class="product-media-container product-media--{{ media.id }} {{ media.media_type }}"
            data-product-single-media-wrapper
            {% if media.media_type == 'video' %} data-product-media-type-video data-enable-video-looping="{{ enable_video_looping }}"{% endif %}
            {% if media.media_type == 'external_video' %} data-product-media-type-video data-enable-video-looping="{{ enable_video_looping }}" data-video-id="{{ media.external_id }}"{% endif %}
            {% if media.media_type == 'model' %} data-product-media-type-model{% endif %}
            data-thumbnail-id="product-template-{{ media.id }}"
            data-media-id="product-template-{{ media.id }}">
            {% case media.media_type %}
              {% when 'image' %}
                {%- liquid
                  assign image_box_ratio = media.height | append: ".0" | times: 1 | divided_by: media.width | times: 100 | append: "%"
                  assign zoom_image = media | image_url: width: 2400

                  assign loading = 'lazy'
                  assign fetch_priority = 'auto'

                  if template == 'product' and section.index < 3
                    if first_image.id == media.id
                      assign loading = 'eager'
                      assign fetch_priority = 'high'
                    endif
                  elsif section.index == 1
                    if first_image.id == media.id
                      assign loading = 'eager'
                      assign fetch_priority = 'high'
                    endif
                  endif
                -%}

                <div class="box-ratio" style="padding-bottom: {{ image_box_ratio }};">
                  {{ media | image_url: width: 1200 | image_tag:
                    loading: loading,
                    fetchpriority: fetch_priority,
                    sizes: "(min-width: 1601px) 2000px, (min-width: 768px) and (max-width: 1600px) 1200px, (max-width: 767px) 100vw, 900px",
                    widths: '200, 300, 400, 500, 600, 700, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000',
                    id: media.id,
                    data-zoom-src: zoom_image,
                    class: 'product__image',
                    data-aspect-ratio: media.aspect_ratio,
                    data-width: media.width,
                    data-height: media.height
                  }}
                </div>
                <noscript>{{ media | image_url: width: 1200 | image_tag }}</noscript>
                {% if click_to_enlarge and template != 'product.quick' %}
                  <a class="zoom_btn"
                    href="{{ media | image_url: width: 2400 }}"
                    itemprop="contentUrl"
                    tabindex="-1"
                    title="Click to zoom"
                    data-index="{{ forloop.index0 }}"
                    data-ps-slide-index="{% increment my_counter %}"
                    data-count="{{ forloop.length }}">
                    {% render 'snip-icons',
                      wrapper: '.zoom_btn',
                      type: 'apollo',
                      icon: 'search',
                      classes: 'zoom_btn--icon vib-center',
                      size: '16px',
                      fill: 'var(--directional-color)',
                      hover: 'var(--directional-hover-color)' %}
                  </a>
                {% endif %}
              {% when 'external_video' %}
                <div class="product-video videoWrapper product-single__media">
                  <deferred-media class="deferred-media">
                    <template>
                      {%- liquid
                        assign video_class = 'js-' | append: media.host
                        echo media | external_video_url: autoplay: true, loop: enable_video_looping | external_video_tag: class: video_class, loading: "lazy"
                      -%}
                    </template>
                  </deferred-media>
                </div>
              {% when 'video' %}
                {% style %}
                  @media screen and (max-width: 320px) {
                    .product-media--{{ media.id }} .plyr__poster {
                      background-image: url({{ media.preview_image | image_url: width: 360 }}) !important;
                    }
                  }
                  @media screen and (min-width: 320px) and (max-width: 780px) {
                    .product-media--{{ media.id }} .plyr__poster {
                      background-image: url({{ media.preview_image | image_url: width: 900 }}) !important;
                    }
                  }
                  @media screen and (min-width: 780px) and (max-width: 1080px) {
                    .product-media--{{ media.id }} .plyr__poster {
                      background-image: url({{ media.preview_image | image_url: width: 1080 }}) !important;
                    }
                  }
                  @media screen and (min-width: 1080px) {
                    .product-media--{{ media.id }} .plyr__poster {
                      background-image: url({{ media.preview_image | image_url: width: 2048 }}) !important;
                    }
                  }
                {% endstyle %}
                <div class="product-video product-single__media js-video-plyr-wrapper">
                  {{ media | video_tag: controls: true, class: 'media-video', image_size: '800x' }}
                </div>
              {% when 'model' %}
                <div class="product-model product-single__media" style="padding-bottom: 100%">
                  {{ media | model_viewer_tag: image_size: '800x', reveal: 'interaction', toggleable: true, data-model-id: media.id }}
                </div>
            {% endcase %}
          </div>
          <noscript>
            <img id="{{ media.id }}" class="product-main-image" src="{{ featured_media | img_url: '800x' }}" alt='{{ media.alt | escape }}'/>
          </noscript>
        </div>
      {% endfor %}
    </div>
    {% assign first_3d_model = product.media | where: "media_type", "model" | first %}
    {%- if first_3d_model -%}
      <button
        aria-label="{{ 'products.product.view_in_space_label' | t }}"
        class="media-button product-single__view-in-space"
        data-shopify-xr
        data-shopify-model3d-id="{{ first_3d_model.id }}"
        data-shopify-title="{{ product.title | escape }}"
        data-shopify-xr-hidden>
        {% render 'snip-icons',
          wrapper: '.product-single__view-in-space',
          type: 'media-icons',
          icon: '3d-icon',
          classes: 'product-single__view-in-space--icon vib-center',
          size: '25px',
          fill: 'var(--text-color)',
          hover: 'var(--text-color)' %}
        <span class='product-single__view-in-space-text vib-center'>{{ 'products.product.view_in_space' | t }}</span>
      </button>
    {%- endif -%}
  </div>
{% endcapture %}

{%- if thumbnail_position == 'left' -%}
  <div class="product__gallery--container">
    {{ thumbnails }}
    {{ slider }}
  </div>
{%- elsif thumbnail_position == 'right' -%}
  <div class="product__gallery--container">
    {{ slider }}
    {{ thumbnails }}
  </div>
{%- elsif thumbnail_position == 'bottom' -%}
  {{ slider }}
  {{ thumbnails }}
{%- endif -%}

<script>
document.addEventListener('DOMContentLoaded', function() {
  function updateMediaForVariantColor(variant) {
    if (!variant) return;
    
    const variantColor = variant.option1 ? variant.option1.toLowerCase() : '';
    const allMedia = document.querySelectorAll('[data-media-color], [data-media-alt]');
    
    let hasVisibleMedia = false;
    allMedia.forEach(media => {
      const mediaColor = media.getAttribute('data-media-color');
      const mediaAlt = media.getAttribute('data-media-alt');
      
      const shouldShow = (
        (mediaColor && variantColor && mediaColor.includes(variantColor)) || 
        (mediaAlt && mediaAlt.includes('all')) || 
        (mediaAlt && mediaAlt === '{{ product.title | downcase }}') || 
        (mediaAlt === '')
      );
      
      if (shouldShow) {
        media.classList.remove('hidden');
        hasVisibleMedia = true;
      } else {
        media.classList.add('hidden');
      }
    });
    
    if (!hasVisibleMedia) {
      allMedia.forEach(media => {
        media.classList.remove('hidden');
      });
    }
    
    if (typeof Flickity !== 'undefined') {
      setTimeout(() => {
        const mainCarousel = document.querySelector('[data-main-carousel]');
        if (mainCarousel && mainCarousel.flickity) {
          mainCarousel.flickity.reloadCells();
          const firstVisible = mainCarousel.querySelector('.carousel-cell:not(.hidden)');
          if (firstVisible) {
            const index = parseInt(firstVisible.getAttribute('data-slide-index'));
            mainCarousel.flickity.select(index, false, true);
          }
        }
        
        const thumbCarousel = document.querySelector('[data-thumbnail-carousel]');
        if (thumbCarousel && thumbCarousel.flickity) {
          thumbCarousel.flickity.reloadCells();
          const firstVisibleThumb = thumbCarousel.querySelector('.carousel-cell:not(.hidden)');
          if (firstVisibleThumb) {
            const thumbIndex = parseInt(firstVisibleThumb.getAttribute('data-slide-index'));
            thumbCarousel.flickity.select(thumbIndex, false, true);
          }
        }
      }, 50);
    }
  }
  
  document.addEventListener('variant:changed', function(event) {
    updateMediaForVariantColor(event.detail.variant);
  });
  
  const variantSelects = document.querySelectorAll('select[name="Color"], select[name="color"], input[name="Color"], input[name="color"]');
  variantSelects.forEach(select => {
    select.addEventListener('change', function() {
      setTimeout(() => {
        if (window.variantFromForm) {
          const variant = window.variantFromForm();
          updateMediaForVariantColor(variant);
        }
      }, 100);
    });
  });
  
  const initialVariant = {{ product.selected_or_first_available_variant | json }};
  updateMediaForVariantColor(initialVariant);
});
</script>