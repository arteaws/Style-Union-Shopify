<script>
  // Track recently viewed products
  document.addEventListener('DOMContentLoaded', function() {
    // Check if this is a product page and product data exists
    if (window.location.pathname.includes('/products/') && typeof ProductJson !== 'undefined') {
      // Get current product handle from URL
      const productHandle = window.location.pathname.split('/products/')[1].split('/')[0];
      
      // Get product data
      const productData = {
        id: {{ product.id | json }},
        title: {{ product.title | json }},
        url: `/products/${productHandle}`,
        image: {{ product.featured_image | img_url: '400x' | json }}
      };
      
      // Skip if no image available
      if (!productData.image || productData.image.includes('no-image')) return;
      
      // Get existing recent products
      let recentProducts = [];
      try {
        const storedProducts = localStorage.getItem('recentlyViewedProducts');
        recentProducts = storedProducts ? JSON.parse(storedProducts) : [];
      } catch (e) {
        console.error('Error parsing recent products:', e);
        recentProducts = [];
      }
      
      // Remove if this product already exists
      recentProducts = recentProducts.filter(p => p.id !== productData.id);
      
      // Add new product to beginning of array
      recentProducts.unshift(productData);
      
      // Limit to max products (20)
      if (recentProducts.length > 20) {
        recentProducts = recentProducts.slice(0, 20);
      }
      
      // Save back to localStorage
      try {
        localStorage.setItem('recentlyViewedProducts', JSON.stringify(recentProducts));
      } catch (e) {
        console.error('Error saving recent products:', e);
      }
    }
  });
</script>