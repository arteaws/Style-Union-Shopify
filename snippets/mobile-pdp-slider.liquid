
<link rel="stylesheet" href="https://unpkg.com/flickity@2/dist/flickity.min.css">
<script src="https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js"></script>



<style>
/* Mobile PDP Media Gallery Styles */
.mobile_pdp_media_gallery {
  position: relative;
  width: 100%;
  max-width: 100%;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

/* Main Flickity Carousel */
.mobile_pdp_media_gallery .main-carousel {
  background: #f8f9fa;
  border-radius: 12px;
  margin-bottom: 16px;
  overflow: hidden;
}

.mobile_pdp_media_gallery .carousel-cell {
  width: 100%;
  height: 400px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: white;
}

.mobile_pdp_media_gallery .mobile_pdp_main_image {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  display: block;
}

.mobile_pdp_media_gallery .mobile_pdp_main_video {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  background: black;
  border-radius: 8px;
}

/* Flickity Navigation Buttons */
.mobile_pdp_media_gallery .flickity-button {
  background: rgba(255, 255, 255, 0.95);
  border: none;
  border-radius: 50%;
  width: 44px;
  height: 44px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  backdrop-filter: blur(8px);
  transition: all 0.3s ease;
  opacity: 0.8;
}

.mobile_pdp_media_gallery .flickity-button:hover {
  background: rgba(255, 255, 255, 1);
  transform: scale(1.05);
  opacity: 1;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
}

.mobile_pdp_media_gallery .flickity-button:disabled {
  opacity: 0.3;
  cursor: default;
  transform: none;
}

.mobile_pdp_media_gallery .flickity-button-icon {
  fill: #1C42A3;
}

.mobile_pdp_media_gallery .flickity-prev-next-button.previous {
  left: 16px;
}

.mobile_pdp_media_gallery .flickity-prev-next-button.next {
  right: 16px;
}

/* Remove default page dots */
.mobile_pdp_media_gallery .flickity-page-dots {
  display: none;
}

/* Thumbnails Container */
.mobile_pdp_media_gallery .mobile_pdp_thumbnails_container {
  width: 100%;
  padding: 0 12px;
  margin-top: 8px;
}

.mobile_pdp_media_gallery .thumbnail-carousel {
  background: transparent;
  padding: 8px 0;
}

.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell {
  width: 70px;
  height: 70px;
  margin-right: 12px;
  cursor: pointer;
  border-radius: 8px;
  overflow: hidden;
  border: 2px solid transparent;
  transition: all 0.3s ease;
  position: relative;
  background: #f8f9fa;
}

.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  border-color: rgba(28, 66, 163, 0.3);
}

.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell.is-selected {
  border-color: #1C42A3;
  box-shadow: 0 4px 16px rgba(28, 66, 163, 0.25);
  transform: translateY(-2px);
}

.mobile_pdp_media_gallery .mobile_pdp_thumbnail_image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  transition: all 0.3s ease;
}

.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell:hover .mobile_pdp_thumbnail_image {
  transform: scale(1.05);
}

/* Video Thumbnail Styles */
.mobile_pdp_media_gallery .mobile_pdp_video_thumbnail {
  position: relative;
  width: 100%;
  height: 100%;
}

.mobile_pdp_media_gallery .mobile_pdp_video_play_icon {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 24px;
  height: 24px;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(4px);
  transition: all 0.3s ease;
}

.mobile_pdp_media_gallery .mobile_pdp_video_thumbnail:hover .mobile_pdp_video_play_icon {
  background: rgba(28, 66, 163, 0.9);
  transform: translate(-50%, -50%) scale(1.1);
}

.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell.is-selected .mobile_pdp_video_play_icon {
  background: rgba(28, 66, 163, 0.8);
}

/* Hide thumbnail navigation buttons */
.mobile_pdp_media_gallery .thumbnail-carousel .flickity-button {
  display: none;
}

/* Responsive Design */
@media (min-width: 480px) {
  .mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell {
    width: 80px;
    height: 80px;
    margin-right: 16px;
  }
  
  .mobile_pdp_media_gallery .mobile_pdp_thumbnails_container {
    padding: 0 16px;
  }
  
  .mobile_pdp_media_gallery .mobile_pdp_video_play_icon {
    width: 28px;
    height: 28px;
  }
}

@media (max-width: 360px) {
  .mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell {
    width: 60px;
    height: 60px;
    margin-right: 8px;
  }
  
  .mobile_pdp_media_gallery .mobile_pdp_thumbnails_container {
    padding: 0 8px;
  }
  
  .mobile_pdp_media_gallery .flickity-button {
    width: 36px;
    height: 36px;
  }
  
  .mobile_pdp_media_gallery .flickity-prev-next-button.previous {
    left: 12px;
  }
  
  .mobile_pdp_media_gallery .flickity-prev-next-button.next {
    right: 12px;
  }
  
  .mobile_pdp_media_gallery .mobile_pdp_video_play_icon {
    width: 20px;
    height: 20px;
  }
  
  .mobile_pdp_media_gallery .mobile_pdp_video_play_icon svg {
    width: 12px;
    height: 12px;
  }
}

.mobile_pdp_media_gallery .carousel-cell {
  counter-increment: carousel-cell;
}
  
</style>





{% comment %}  Mobile PDP Media Start {% endcomment %}
<div class="mobile_pdp_media_gallery">
  <!-- Main Product Images Carousel -->
  <div class="main-carousel" data-flickity='{ "cellAlign": "center", "contain": true, "prevNextButtons": true, "pageDots": false, "draggable": true, "freeScroll": false, "wrapAround": false }'>
    
    {% for media in product.media %}
      {% if media.media_type == 'image' %}
        <div class="carousel-cell">
          <img
            class="mobile_pdp_main_image"
            srcset="
              {% if media.preview_image.width >= 375 %}{{ media.preview_image | image_url: width: 375 }} 375w,{% endif %}
              {% if media.preview_image.width >= 550 %}{{ media.preview_image | image_url: width: 550 }} 550w,{% endif %}
              {% if media.preview_image.width >= 750 %}{{ media.preview_image | image_url: width: 750 }} 750w,{% endif %}
              {% if media.preview_image.width >= 1100 %}{{ media.preview_image | image_url: width: 1100 }} 1100w,{% endif %}
              {% if media.preview_image.width >= 1500 %}{{ media.preview_image | image_url: width: 1500 }} 1500w,{% endif %}
              {{ media.preview_image | image_url }} {{ media.preview_image.width }}w
            "
            sizes="(max-width: 750px) 100vw, 50vw"
            src="{{ media.preview_image | image_url: width: 750 }}"
            loading="lazy"
            data-index="{{ forloop.index0 }}"
            alt="{{ media.alt | escape }}"
            width="{{ media.preview_image.width }}"
            height="{{ media.preview_image.height }}"
          >
        </div>
      {% else %}
        <div class="carousel-cell">
          {{
            media.video
            | video_tag:
              image_size: '1100x',
              loop: section.settings.enable_video_looping,
              controls: true,
              muted: false,
              class: 'mobile_pdp_main_video'
          }}
        </div>
      {% endif %}
    {% endfor %}
    
  </div>

  <!-- Thumbnails Container -->
  <div class="mobile_pdp_thumbnails_container">
    <div class="thumbnail-carousel" data-flickity='{ "cellAlign": "left", "contain": true, "prevNextButtons": false, "pageDots": false, "draggable": true, "freeScroll": true, "asNavFor": ".main-carousel" }'>
      
      {% for media in product.media %}
        {% if media.media_type == 'image' %}
          <div class="carousel-cell">
            <img
              class="mobile_pdp_thumbnail_image"
              src="{{ media.preview_image | image_url: width: 150 }}"
              alt="{{ media.alt | escape }}"
              data-index="{{ forloop.index0 }}"
              loading="lazy"
            >
          </div>
        {% else %}
          <div class="carousel-cell">
            <div class="mobile_pdp_video_thumbnail">
              <img
                class="mobile_pdp_thumbnail_image"
                src="{{ media.preview_image | image_url: width: 150 }}"
                alt="{{ media.alt | escape }}"
                data-index="{{ forloop.index0 }}"
                loading="lazy"
              >
              <div class="mobile_pdp_video_play_icon">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M8 5v14l11-7z" fill="white"/>
                </svg>
              </div>
            </div>
          </div>
        {% endif %}
      {% endfor %}
      
    </div>
  </div>
</div>
{% comment %}  Mobile PDP Media End {% endcomment %}



<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
        // Check if Flickity is loaded
        if (typeof Flickity === 'undefined') {
            console.error('Flickity is not loaded. Please include Flickity CDN.');
            return;
        }

        // Initialize main carousel
        var mainCarousel = new Flickity('.mobile_pdp_media_gallery .main-carousel', {
            cellAlign: 'center',
            contain: true,
            prevNextButtons: true,
            pageDots: false,
            draggable: true,
            freeScroll: false,
            wrapAround: false,
            adaptiveHeight: false,
            lazyLoad: 1
        });

        // Initialize thumbnail carousel
        var thumbnailCarousel = new Flickity('.mobile_pdp_media_gallery .thumbnail-carousel', {
            cellAlign: 'left',
            contain: true,
            prevNextButtons: false,
            pageDots: false,
            draggable: true,
            freeScroll: true,
            asNavFor: '.mobile_pdp_media_gallery .main-carousel',
            lazyLoad: 1
        });

        // Sync carousels - main to thumbnail
        mainCarousel.on('select', function() {
            var selectedIndex = mainCarousel.selectedIndex;
            thumbnailCarousel.select(selectedIndex, false, true);
            // Update thumbnail active state
            updateThumbnailActive(selectedIndex);
        });

        // Sync carousels - thumbnail to main
        thumbnailCarousel.on('select', function() {
            var selectedIndex = thumbnailCarousel.selectedIndex;
            mainCarousel.select(selectedIndex, false, true);
        });

        // Function to update active thumbnail styling
        function updateThumbnailActive(activeIndex) {
            var thumbnailCells = document.querySelectorAll('.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell');
            thumbnailCells.forEach(function(cell, index) {
                cell.classList.remove('is-selected');
                if (index === activeIndex) {
                    cell.classList.add('is-selected');
                }
            });
        }

        // Add click handlers for thumbnails
        var thumbnailCells = document.querySelectorAll('.mobile_pdp_media_gallery .thumbnail-carousel .carousel-cell');
        thumbnailCells.forEach(function(cell, index) {
            cell.addEventListener('click', function(e) {
                e.preventDefault();
                mainCarousel.select(index);
            });

            // Add hover effects
            cell.addEventListener('mouseenter', function() {
                if (!this.classList.contains('is-selected')) {
                    this.style.transform = 'translateY(-3px) scale(1.02)';
                }
            });

            cell.addEventListener('mouseleave', function() {
                if (!this.classList.contains('is-selected')) {
                    this.style.transform = '';
                }
            });
        });

        // Set initial active thumbnail
        updateThumbnailActive(0);

        // Keyboard navigation
        document.addEventListener('keydown', function(e) {
            // Only handle keyboard events when carousel is in focus or no other input is focused
            if (document.activeElement.tagName.toLowerCase() === 'input' || 
                document.activeElement.tagName.toLowerCase() === 'textarea' ||
                document.activeElement.isContentEditable) {
                return;
            }

            switch(e.key) {
                case 'ArrowLeft':
                    e.preventDefault();
                    mainCarousel.previous();
                    break;
                case 'ArrowRight':
                    e.preventDefault();
                    mainCarousel.next();
                    break;
                case 'Home':
                    e.preventDefault();
                    mainCarousel.select(0);
                    break;
                case 'End':
                    e.preventDefault();
                    mainCarousel.select(mainCarousel.cells.length - 1);
                    break;
                case 'Escape':
                    // Remove focus from carousel if needed
                    document.activeElement.blur();
                    break;
            }
        });

        // Touch/swipe support for better mobile experience
        var startX = 0;
        var startY = 0;
        var minSwipeDistance = 50;

        document.querySelector('.mobile_pdp_media_gallery .main-carousel').addEventListener('touchstart', function(e) {
            startX = e.touches[0].clientX;
            startY = e.touches[0].clientY;
        }, { passive: true });

        document.querySelector('.mobile_pdp_media_gallery .main-carousel').addEventListener('touchend', function(e) {
            if (!startX || !startY) return;

            var endX = e.changedTouches[0].clientX;
            var endY = e.changedTouches[0].clientY;

            var diffX = startX - endX;
            var diffY = startY - endY;

            // Only trigger if horizontal swipe is greater than vertical
            if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > minSwipeDistance) {
                if (diffX > 0) {
                    // Swipe left - next slide
                    mainCarousel.next();
                } else {
                    // Swipe right - previous slide
                    mainCarousel.previous();
                }
            }

            // Reset values
            startX = 0;
            startY = 0;
        }, { passive: true });

        // Resize handler to update carousel on window resize
        var resizeTimeout;
        window.addEventListener('resize', function() {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(function() {
                mainCarousel.resize();
                thumbnailCarousel.resize();
            }, 250);
        });

        // Auto-play functionality (optional - uncomment if needed)
        /*
        var autoPlayInterval;
        var autoPlayDelay = 5000; // 5 seconds

        function startAutoPlay() {
            autoPlayInterval = setInterval(function() {
                if (mainCarousel.selectedIndex === mainCarousel.cells.length - 1) {
                    mainCarousel.select(0);
                } else {
                    mainCarousel.next();
                }
            }, autoPlayDelay);
        }

        function stopAutoPlay() {
            clearInterval(autoPlayInterval);
        }

        // Start autoplay
        startAutoPlay();

        // Pause on hover
        document.querySelector('.mobile_pdp_media_gallery').addEventListener('mouseenter', stopAutoPlay);
        document.querySelector('.mobile_pdp_media_gallery').addEventListener('mouseleave', startAutoPlay);

        // Pause on focus (for accessibility)
        mainCarousel.on('select', stopAutoPlay);
        */

        // Accessibility improvements
        function updateAriaLabels() {
            var currentSlide = mainCarousel.selectedIndex + 1;
            var totalSlides = mainCarousel.cells.length;
            
            // Update main carousel accessibility
            var mainCarouselEl = document.querySelector('.mobile_pdp_media_gallery .main-carousel');
            if (mainCarouselEl) {
                mainCarouselEl.setAttribute('aria-label', `Image ${currentSlide} of ${totalSlides}`);
            }

            // Update thumbnail accessibility
            thumbnailCells.forEach(function(cell, index) {
                cell.setAttribute('role', 'button');
                cell.setAttribute('aria-label', `View image ${index + 1}`);
                cell.setAttribute('tabindex', index === mainCarousel.selectedIndex ? '0' : '-1');
            });
        }

        // Update aria labels on carousel change
        mainCarousel.on('select', updateAriaLabels);
        
        // Initialize aria labels
        updateAriaLabels();

        // Error handling for missing elements
        if (!document.querySelector('.mobile_pdp_media_gallery .main-carousel')) {
            console.warn('Main carousel element not found');
        }
        
        if (!document.querySelector('.mobile_pdp_media_gallery .thumbnail-carousel')) {
            console.warn('Thumbnail carousel element not found');
        }

        console.log('Flickity carousel initialized successfully');

    } catch (error) {
        console.error('Error initializing Flickity carousel:', error);
    }
});
</script>